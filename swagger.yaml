swagger: "2.0"
info:
  version: 1.0.0
  title: "BOXwise Pro BOS REST API"
  description: The BOS REST API is the API used by BOXwise Pro to register, lookup offline scanners and uploading/downloading files.
  termsOfService: http://app.boxwise.nl/api/terms/
  contact:
    name: Trancon bv 
    email: admin@trancon.nl
    url: https://www.trancon.nl
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: bos-httprest.boxwise.nl
basePath: /api
schemes:
  - https
consumes:
  - application/json; charset=utf-8
produces:
  - application/json; charset=utf-8
securityDefinitions:
  api_key:
    type: apiKey
    name: Authorization
    description: |
      The API can only be used when you authorize the request using an API Key.
    in: header
security:
  - api_key: []
paths:
  /licenses:
    get:
      description: |
        Returns all registered BOXwise Pro licenses.
      operationId: findLicenses
      parameters:
        - name: name
          in: query
          description: License name to filter on
          required: false
          type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
          default: none
      responses:
        200:
          description: license response
          schema:
            type: array
            items:
              $ref: '#/definitions/License'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new license in the store.  Duplicates are not allowed.
      operationId: addLicense
      security: [ api_key: [] ]
      parameters:
        - name: license
          in: body
          description: License to add to the store
          required: true
          schema:
            $ref: '#/definitions/NewLicense'
      responses:
        200:
          description: license response
          schema:
            $ref: '#/definitions/License'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: Deletes an existing license in the store.
      operationId: deleteLicense
      parameters:
        - name: licenseid
          in: query
          description: License id of the license to delete from the store
          required: true
          type: string
      responses:
        204:
          description: license deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /scanners:
    get:
      description: |
        Returns all offline scanners registered for this license id.
      operationId: findScanners
      parameters:
        - name: licenseid
          in: query
          description: BOXwise Pro licenseid to filter on
          required: true
          type: string
          default: none
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
          default: none
      responses:
        200:
          description: scanner response
          schema:
            type: array
            items:
              $ref: '#/definitions/Scanner'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new scanner in the store.  Duplicates are not allowed. The serial number is checked against all other serial numbers registered ignoring under which licenseid they are registered.
      operationId: addScanner
      parameters:
        - name: scanner
          in: body
          description: Scanner to add to the store
          required: true
          schema:
            $ref: '#/definitions/NewScanner'
      responses:
        200:
          description: scanner response
          schema:
            $ref: '#/definitions/Scanner'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /scanners/{serialno}:
    get:
      description: Returns a scanner based on the serial number.
      operationId: findScannerBySerialNo
      parameters:
        - name: serialno
          in: path
          description: Serial number of scanner to fetch
          required: true
          type: string
      responses:
        200:
          description: scanner response
          schema:
            $ref: '#/definitions/Scanner'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single scanner based on the serial number supplied.
      operationId: deleteScannerBySerialNo
      parameters:
        - name: serialno
          in: path
          description: Serial number of scanner to fetch
          required: true
          type: string
      responses:
        204:
          description: scanner deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Scanner:
    allOf:
      - $ref: '#/definitions/NewScanner'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  NewScanner:
    required:
      - licenseid
      - serialno
      - name
    properties:
      licenseid:
        type: string
      serialno:
        type: string
      name:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  License:
    allOf:
      - $ref: '#/definitions/NewLicense'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  NewLicense:
    required:
      - licenseid
      - name
    properties:
      licenseid:
        type: integer
        format: int32
      name:
        type: string